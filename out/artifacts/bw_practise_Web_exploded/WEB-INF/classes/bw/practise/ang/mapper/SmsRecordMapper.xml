<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bw.practise.ang.mapper.SmsRecordMapper">
<!-- 返回报告 -->

  <sql id="where">
	  <where>
	       <if test = "paramMap.phone!=null and paramMap.phone!=''">
	       and phone = #{paramMap.phone}
	       </if>
	       <if test = "paramMap.content!=null and paramMap.content!=''">
	       and content like ('%',#{paramMap.content},'%') 
	       </if>
	  </where>
  </sql>
  
  <select id="smsRecord" resultMap="SmsRecordList">
       select * from tb_sms_record
       <include refid = "where"/>
  </select>
  
  <resultMap type="smsRecord" id="SmsRecordList">
     <result property="sms_type_id" column="sms_type_id"/>
     <result property="user_id" column="user_id"/>
     <association property="smsType" column="{id=sms_type_id}"
             select="bw.practise.ang.mapper.SmsTypeMapper.findbyId"/>
     <association property="user" column="{id=user_id}"
     		 select="bw.practise.ang.mapper.UserMapper.findbyId" />
   
  </resultMap>
  
  <!--select distinct 用于返回唯一不同的值 
      
      select distinct listName from tableName
  -->
  <!--ORDER BY
      
      select listName1,listName2 from tableName ORDER by listName1
  -->
  <!--TOP子句  
  
      select top 50 percent * from tableName 从表中取出50%的记录  
  -->
  <!--LIKE 
  
      select * from tableName where listName not like '%lin%' 从表中选择listName中不包含lin的数据
   -->
   <!--SELECT IN 语法
   
      select * from tableName where listName IN ('name1','name2')选出listName中name1和name2的数据
   -->
   <!--BETWEEN AND  会选取介于两个值之间的数据范围。这些值可以是数值、文本或者日期。 
   
      select * from tableName where listName BETWEEN 'A' AND 'D'
   -->
   <!-- ALIAS使用表明的别名
   
      select listName from tableName AS tN where tN.listName = 'ang'
     -->
   <!--aggregate function合计函数，操作面向一系列的值，返回一个单一的值
   
      
    -->
    <!-- 找出每个用户最晚的发短信时间 -->
    
  
</mapper>